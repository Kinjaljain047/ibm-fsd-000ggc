package com.example.demo.service;

import java.util.ArrayList;
import java.util.List;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.env.Environment;
import org.springframework.mail.MailException;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;

import com.example.demo.dto.CustomerDto;
import com.example.demo.entity.Customer;
import com.example.demo.model.ResponseModel;
import com.example.demo.repository.CustomerRepository;
@Service
public class CustomerServiceImpl implements CustomerService{
	
	@Autowired
	private Environment env;
	private CustomerRepository customerRepository;
    private BCryptPasswordEncoder  bCryptPasswordEncoder;
    @Autowired
    private JavaMailSender javaMailSender;
    
	@Override
	public CustomerDto createCustomer(CustomerDto customer) {
		CustomerDto c1= getCustomerByEmail(customer.getEmail());
		if(c1!=null) {
			return null;
		}else {
			ModelMapper mapper = new ModelMapper();
			mapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
			Customer c = mapper.map(customer, Customer.class);
			
			String bpass = bCryptPasswordEncoder.encode(c.getPassword());
			c.setPassword(bpass);
			
			try {
				SimpleMailMessage helper= new SimpleMailMessage();
				 helper.setTo(c.getEmail());
				 helper.setSubject("Welcome to Shopping Website");
				 helper.setText("Congratulations,You are our customer now!! We are so happy that now you are a part of our family and we promise to keep u fit and healthy ThankYou :)");
				    
				    javaMailSender.send(helper);
			} catch (MailException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			finally {
				customerRepository.save(c);
				
				CustomerDto cust = mapper.map(c, CustomerDto.class);
				return cust;
			}
		}
	}

	@Override
	public List<ResponseModel> getAllCustomers() {
		ModelMapper mapper = new ModelMapper();
		mapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
		List<Customer> clist= customerRepository.findAll();
		List<ResponseModel> rlist= new ArrayList<ResponseModel>();
		for(Customer c: clist) {
			rlist.add(mapper.map(c,ResponseModel.class));
			}
		return rlist;
	}

	@Override
	public ResponseModel getCustomerById(Long id) {
		ModelMapper mapper = new ModelMapper();
		mapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
		Customer c= customerRepository.findById(id).get();
		ResponseModel cdto= mapper.map(c,ResponseModel.class);
		return cdto;
	}

	@Override
	public void deleteCustomer(Long id) {
		ModelMapper mapper = new ModelMapper();
		mapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
		customerRepository.deleteById(id);
		}
		
	

	@Override
	public ResponseModel getCustomerByEmail(String email) {
		ModelMapper mapper = new ModelMapper();
		mapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
		Customer c= customerRepository.getCustomerByEmail(email);
		ResponseModel r= mapper.map(c,ResponseModel.class);
		return r;
	}

	@Override
	public CustomerDto verifyUser(CustomerDto customer) {
		// TODO Auto-generated method stub
		return null;
	}
  
}
